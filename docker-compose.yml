services:
  mssql:
    container_name: mssql-server-demo
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "5434:1433"
    environment:
      - SA_PASSWORD=admin123!
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    volumes: 
      - mssql-volume:/var/opt/mssql
    networks:
      - sv-bank
  rabbitmq:
    container_name: rabbitmq-server
    image: rabbitmq:3.10-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq-volume:/var/lib/rabbitmq
    networks:
      - sv-bank
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
  transaction-service-init:
     container_name: migration
     build:
       context: ./TransactionService
       dockerfile: ./Dockerfile.Migration
     environment:
        - ConnectionStrings__BankSqlConnection=${CONNECTIONSTRINGS_BANKSQLCONNECTION}
     depends_on:
        - mssql
     networks:
       - sv-bank
     command: >
      /bin/sh -c "
      until /opt/mssql-tools/bin/sqlcmd -S ${DB_HOST} -U ${DB_USER} -P '${SA_PASSWORD}' -Q 'SELECT 1' &> /dev/null; do
        echo 'Checking Sql Server...';
        sleep 5;
      done;
      echo 'SQL Sql ready';
      ./efbundle ${MIGRATIONNAME:-''}"
  transaction-service:
        container_name: transaction-service
        environment:
            - ConnectionStrings__BankSqlConnection=${CONNECTIONSTRINGS_BANKSQLCONNECTION}
            - BusConfiguration__RabbitMQEnabled=${BUSCONFIGURATION_RABBITMQENABLED}
            - BusConfiguration__RabbitMQConnectionString=${BUSCONFIGURATION_RABBITMQCONNECTIONSTRING}
            - BusConfiguration__KafkaConnectionString=${BUSCONFIGURATION_KAFKACONNECTIONSTRING}
        build:
            context: ./TransactionService
            dockerfile: Dockerfile
        ports:
            - 6010:80
        networks:
            - sv-bank
        depends_on: 
            rabbitmq:
               condition: service_healthy
            mssql:
               condition: service_started
  transaction-worker:
        container_name: transaction-worker
        environment:
            - ConnectionStrings__BankSqlConnection=${CONNECTIONSTRINGS_BANKSQLCONNECTION}
            - BusConfiguration__RabbitMQEnabled=${BUSCONFIGURATION_RABBITMQENABLED}
            - BusConfiguration__RabbitMQConnectionString=${BUSCONFIGURATION_RABBITMQCONNECTIONSTRING}
            - BusConfiguration__KafkaConnectionString=${BUSCONFIGURATION_KAFKACONNECTIONSTRING}
        build:
            context: ./TransactionService
            dockerfile: ./Dockerfile.Worker
        networks:
            - sv-bank
        depends_on: 
            rabbitmq:
               condition: service_healthy
            mssql:
               condition: service_started
  antifroud-worker:
        container_name: antifroud-worker
        environment:
            - ConnectionStrings__BankSqlConnection=${CONNECTIONSTRINGS_BANKSQLCONNECTION}
            - BusConfiguration__RabbitMQEnabled=${BUSCONFIGURATION_RABBITMQENABLED}
            - BusConfiguration__RabbitMQConnectionString=${BUSCONFIGURATION_RABBITMQCONNECTIONSTRING}
            - BusConfiguration__KafkaConnectionString=${BUSCONFIGURATION_KAFKACONNECTIONSTRING}
        build:
            context: ./AntifraudService
            dockerfile: ./DockerfileAntifroud.Worker
        networks:
            - sv-bank
        depends_on: 
            rabbitmq:
               condition: service_healthy
            mssql:
               condition: service_started
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
volumes:
  mssql-volume:
    driver: local
  rabbitmq-volume:
    driver: local

networks:
  sv-bank:
    name: sv-bank